# action.yml
name: "Helm Push"
description: "Pushes a local chart to a ChartMuseum or OCI compatible registry. Supports token based auth and Chart.yaml version override."
branding:
  color: "green"
  icon: "upload-cloud"
inputs:
  access-token:
    description: "API Token with read/write permissions to the helm registry"
    required: false
    default: ""
  username:
    description: "Username read/write permissions to the helm registry"
    required: false
    default: ""
  password:
    description: "Password with read/write permissions to the helm registry"
    required: false
    default: ""
  registry-url:
    description: "Repository url"
    required: true
    default: ""
  chart-folder:
    description: "Relative path to chart folder"
    required: false
    default: "chart"
  version:
    description: "Chart Version"
    required: false
    default: ""
  appVersion:
    description: "App Version"
    required: false
    default: ""
  force:
    description: "Whether or not to override existing chart with same version"
    required: false
    default: "false"
  update-dependencies:
    description: "Whether or not to update dependencies before packaging"
    required: false
    default: "false"
  useOCIRegistry:
    description: "If publishing to big cloud registries, utilizing OCI container spec for helm packages, set to true"
    required: false
    default: "false"
  add-repositories:
    description: "Optionally add list of Helm Repositories to add running `helm repo add $args` for each line"
    required: false
    # valid list of args for `helm repo add $args` each line maps to repo add e.g.
    # add-repositories: |
    #     stable https://charts.helm.sh/stable
    #     private https//private.internal --username private --password 'bulls eye'
    #     ...
    default: ""
outputs:
  chart-package:
    description: "Path to the packaged chart"
runs:
  using: "docker"
  image: "Dockerfile"
  env:
    CHART_FOLDER: ${{ inputs.chart-folder }}
    FORCE: ${{ inputs.force }}
    REGISTRY_URL: ${{ inputs.registry-url }}
    REGISTRY_ACCESS_TOKEN: ${{ inputs.access-token }}
    REGISTRY_USERNAME: ${{ inputs.username }}
    REGISTRY_PASSWORD: ${{ inputs.password }}
    REGISTRY_VERSION: ${{ inputs.version }}
    REGISTRY_APPVERSION: ${{ inputs.appVersion }}
    USE_OCI_REGISTRY: ${{ inputs.useOCIRegistry }}
    UPDATE_DEPENDENCIES: ${{ inputs.update-dependencies }}
    ADD_REPOSITORIES: ${{ inputs.add-repositories }}
